{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guinh\\\\OneDrive\\\\Documentos\\\\projetoFrete\\\\fretefacil-frontend\\\\src\\\\Motorista.js\",\n  _s = $RefreshSig$();\n// // import { useEffect, useState } from \"react\";\n// // import axios from \"axios\";\n// // import './motorista.css'\n\n// // const Motorista = () => {\n// //   const [solicitacoes, setSolicitacoes] = useState([]); \n// //   const [modalOpen, setModalOpen] = useState(false); \n// //   const [solicitacaoSelecionada, setSolicitacaoSelecionada] = useState(null); \n\n// //   const accessToken = localStorage.getItem(\"access_token\");\n\n// //   useEffect(() => {\n// //     axios\n// //       .get(\"http://192.168.0.237:8000/api/solicitacoes/\", {\n// //         headers: { Authorization: `Bearer ${accessToken}` },\n// //       })\n// //       .then((response) => {\n// //         console.log(\"Resposta da API:\", response.data);\n// //         setSolicitacoes(Array.isArray(response.data) ? response.data : response.data.results || []);\n// //       })\n// //       .catch((error) => {\n// //         console.error(\"Erro ao buscar solicitações:\", error);\n// //       });\n// //   }, []);\n\n// //   const abrirModal = (solicitacao) => {\n// //     setSolicitacaoSelecionada(solicitacao);\n// //     setModalOpen(true);\n// //   };\n\n// //   const fecharModal = () => {\n// //     setModalOpen(false);\n// //     setSolicitacaoSelecionada(null);\n// //   };\n\n// //   return (\n// //     <div className=\"container\">\n// //       <h1>Solicitações de Corrida</h1>\n// //       {solicitacoes.length === 0 ? (\n// //         <p>Nenhuma solicitação disponível.</p>\n// //       ) : (\n// //         <div className=\"grid\">\n// //           {solicitacoes.map((solicitacao) => (\n// //             <div key={solicitacao.id} className=\"card\" onClick={() => abrirModal(solicitacao)}>\n// //               <h3>{solicitacao.cliente_nome}</h3>\n// //               <p>Clique para mais detalhes</p>\n// //             </div>\n// //           ))}\n// //         </div>\n// //       )}\n\n// //       {modalOpen && solicitacaoSelecionada && (\n// //         <div className=\"modal\">\n// //           <div className=\"modal-content\">\n// //             <h2>Detalhes da Solicitação</h2>\n// //             <p><strong>Cliente:</strong> {solicitacaoSelecionada.cliente_nome}</p>\n// //             <p><strong>Detalhes:</strong> {solicitacaoSelecionada.detalhes}</p>\n// //             <button className=\"accept\">Aceitar</button>\n// //             <button className=\"reject\">Recusar</button>\n// //             <button className=\"close\" onClick={fecharModal}>Fechar</button>\n// //           </div>\n// //         </div>\n// //       )}\n// //     </div>\n// //   );\n// // };\n\n// // export default Motorista;\n\n// // import { useEffect, useState } from \"react\";\n// // import axios from \"axios\";\n// // import \"./motorista.css\";\n\n// // // Função para calcular distância entre dois pontos em km\n// // const calcularDistancia = (lat1, lon1, lat2, lon2) => {\n// //   if (!lat1 || !lon1 || !lat2 || !lon2) return 0; // Evita NaN se algum valor for indefinido\n\n// //   const R = 6371; // Raio da Terra em km\n// //   const dLat = ((lat2 - lat1) * Math.PI) / 180;\n// //   const dLon = ((lon2 - lon1) * Math.PI) / 180;\n// //   const a =\n// //     Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n// //     Math.cos((lat1 * Math.PI) / 180) *\n// //       Math.cos((lat2 * Math.PI) / 180) *\n// //       Math.sin(dLon / 2) *\n// //       Math.sin(dLon / 2);\n// //   const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n// //   return (R * c).toFixed(2); // Retorna distância em km com duas casas decimais\n// // };\n\n// // // Função para obter endereço a partir das coordenadas\n// // const obterEndereco = async (lat, lng) => {\n// //   if (!lat || !lng) return \"Endereço não disponível\";\n\n// //   try {\n// //     const response = await fetch(\n// //       `https://nominatim.openstreetmap.org/reverse?lat=${lat}&lon=${lng}&format=json`\n// //     );\n// //     const data = await response.json();\n// //     const { road, suburb, city } = data.address;\n// //     return [road, suburb, city].filter(Boolean).join(\", \") || \"Endereço não encontrado\";\n// //   } catch (error) {\n// //     console.error(\"Erro ao obter endereço:\", error);\n// //     return \"Erro ao obter endereço\";\n// //   }\n// // };\n\n// // const Motorista = () => {\n// //   const [solicitacoes, setSolicitacoes] = useState([]); // Lista de solicitações\n// //   const [modalOpen, setModalOpen] = useState(false); // Controle do modal\n// //   const [solicitacaoSelecionada, setSolicitacaoSelecionada] = useState(null); // Armazena solicitação clicada\n// //   const [enderecos, setEnderecos] = useState({}); // Armazena os endereços de origem e destino\n\n// //   const accessToken = localStorage.getItem(\"access_token\");\n\n// //   useEffect(() => {\n// //     axios\n// //       .get(\"http://192.168.0.237:8000/api/solicitacoes/\", {\n// //         headers: { Authorization: `Bearer ${accessToken}` },\n// //       })\n// //       .then(async (response) => {\n// //         const dados = Array.isArray(response.data)\n// //           ? response.data\n// //           : response.data.results || [];\n\n// //         // Processa cada solicitação para calcular distância e buscar endereço\n// //         const processadas = await Promise.all(\n// //           dados.map(async (solicitacao) => {\n// //             const distancia = calcularDistancia(\n// //               solicitacao.origem_lat,\n// //               solicitacao.origem_lng,\n// //               solicitacao.destino_lat,\n// //               solicitacao.destino_lng\n// //             );\n// //             const preco = (distancia * 1.5).toFixed(2); // R$ por km\n\n// //             // Obtém os endereços de origem e destino\n// //             const origem = await obterEndereco(solicitacao.origem_lat, solicitacao.origem_lng);\n// //             const destino = await obterEndereco(solicitacao.destino_lat, solicitacao.destino_lng);\n\n// //             return { ...solicitacao, distancia, preco, origem, destino };\n// //           })\n// //         );\n\n// //         setSolicitacoes(processadas);\n// //       })\n// //       .catch((error) => {\n// //         console.error(\"Erro ao buscar solicitações:\", error);\n// //       });\n// //   }, []);\n\n// //   const abrirModal = (solicitacao) => {\n// //     setSolicitacaoSelecionada(solicitacao);\n// //     setModalOpen(true);\n// //   };\n\n// //   const fecharModal = () => {\n// //     setModalOpen(false);\n// //     setSolicitacaoSelecionada(null);\n// //   };\n\n// //   return (\n// //     <div className=\"container\">\n// //       <h1>Solicitações de Corrida</h1>\n// //       {solicitacoes.length === 0 ? (\n// //         <p>Nenhuma solicitação disponível.</p>\n// //       ) : (\n// //         <div className=\"grid\">\n// //           {solicitacoes.map((solicitacao) => (\n// //             <div key={solicitacao.id} className=\"card\" onClick={() => abrirModal(solicitacao)}>\n// //               <h3>{solicitacao.cliente_nome}</h3>\n// //               <p><strong>Distância:</strong> {solicitacao.distancia} km</p>\n// //               <p><strong>Valor:</strong> R$ {solicitacao.preco}</p>\n// //             </div>\n// //           ))}\n// //         </div>\n// //       )}\n\n// //       {modalOpen && solicitacaoSelecionada && (\n// //         <div className=\"modal\">\n// //           <div className=\"modal-content\">\n// //             <h2>Detalhes da Solicitação</h2>\n// //             <p><strong>Cliente:</strong> {solicitacaoSelecionada.cliente_nome}</p>\n// //             <p><strong>Distância:</strong> {solicitacaoSelecionada.distancia} km</p>\n// //             <p><strong>Valor:</strong> R$ {solicitacaoSelecionada.preco}</p>\n// //             <p><strong>Origem:</strong> {solicitacaoSelecionada.origem}</p>\n// //             <p><strong>Destino:</strong> {solicitacaoSelecionada.destino}</p>\n// //             <button className=\"accept\">Aceitar</button>\n// //             <button className=\"reject\">Recusar</button>\n// //             <button className=\"close\" onClick={fecharModal}>Fechar</button>\n// //           </div>\n// //         </div>\n// //       )}\n// //     </div>\n// //   );\n// // };\n\n// // export default Motorista;\n\n// import { useEffect, useState } from \"react\";\n// import axios from \"axios\";\n// import \"./motorista.css\";\n\n// const calcularDistancia = (lat1, lon1, lat2, lon2) => {\n//   if (!lat1 || !lon1 || !lat2 || !lon2) return \"0\"; // Retorna \"0\" se faltar algum dado\n\n//   const R = 6371; // Raio da Terra em km\n//   const dLat = ((lat2 - lat1) * Math.PI) / 180;\n//   const dLon = ((lon2 - lon1) * Math.PI) / 180;\n//   const a =\n//     Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n//     Math.cos((lat1 * Math.PI) / 180) *\n//       Math.cos((lat2 * Math.PI) / 180) *\n//       Math.sin(dLon / 2) *\n//       Math.sin(dLon / 2);\n//   const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n//   return (R * c).toFixed(2); // Retorna distância com 2 casas decimais\n// };\n\n// const Motorista = () => {\n//   const [solicitacoes, setSolicitacoes] = useState([]);\n//   const [modalOpen, setModalOpen] = useState(false);\n//   const [solicitacaoSelecionada, setSolicitacaoSelecionada] = useState(null);\n\n//   const accessToken = localStorage.getItem(\"access_token\");\n\n//   useEffect(() => {\n//     axios\n//       .get(\"http://192.168.0.237:8000/api/solicitacoes/\", {\n//         headers: { Authorization: `Bearer ${accessToken}` },\n//       })\n//       .then((response) => {\n//         const dados = Array.isArray(response.data)\n//           ? response.data\n//           : response.data.results || [];\n\n//         // Adiciona distância, preço e endereços direto no estado\n//         const processadas = dados.map((solicitacao) => ({\n//           ...solicitacao,\n//           distancia: calcularDistancia(\n//             solicitacao.origem_lat,\n//             solicitacao.origem_lng,\n//             solicitacao.destino_lat,\n//             solicitacao.destino_lng\n//           ),\n//           preco: (calcularDistancia(\n//             solicitacao.origem_lat,\n//             solicitacao.origem_lng,\n//             solicitacao.destino_lat,\n//             solicitacao.destino_lng\n//           ) * 1.5).toFixed(2), // R$ por km\n//           origem: solicitacao.origem_endereco || \"Endereço não disponível\",\n//           destino: solicitacao.destino_endereco || \"Endereço não disponível\",\n//         }));\n\n//         setSolicitacoes(processadas);\n//       })\n//       .catch((error) => {\n//         console.error(\"Erro ao buscar solicitações:\", error);\n//       });\n//   }, []);\n\n//   const abrirModal = (solicitacao) => {\n//     setSolicitacaoSelecionada(solicitacao);\n//     setModalOpen(true);\n//   };\n\n//   const fecharModal = () => {\n//     setModalOpen(false);\n//     setSolicitacaoSelecionada(null);\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h1>Solicitações de Corrida</h1>\n//       {solicitacoes.length === 0 ? (\n//         <p>Nenhuma solicitação disponível.</p>\n//       ) : (\n//         <div className=\"grid\">\n//           {solicitacoes.map((solicitacao) => (\n//             <div key={solicitacao.id} className=\"card\" onClick={() => abrirModal(solicitacao)}>\n//               <h3>{solicitacao.cliente_nome}</h3>\n//               <p><strong>Distância:</strong> {solicitacao.distancia} km</p>\n//               <p><strong>Valor:</strong> R$ {solicitacao.preco}</p>\n//             </div>\n//           ))}\n//         </div>\n//       )}\n\n//       {modalOpen && solicitacaoSelecionada && (\n//         <div className=\"modal\">\n//           <div className=\"modal-content\">\n//             <h2>Detalhes da Solicitação</h2>\n//             <p><strong>Cliente:</strong> {solicitacaoSelecionada.cliente_nome}</p>\n//             <p><strong>Distância:</strong> {solicitacaoSelecionada.distancia} km</p>\n//             <p><strong>Valor:</strong> R$ {solicitacaoSelecionada.preco}</p>\n//             <p><strong>Origem:</strong> {solicitacaoSelecionada.origem}</p>\n//             <p><strong>Destino:</strong> {solicitacaoSelecionada.destino}</p>\n//             <button className=\"accept\">Aceitar</button>\n//             <button className=\"reject\">Recusar</button>\n//             <button className=\"close\" onClick={fecharModal}>Fechar</button>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Motorista;\n\n// import { useEffect, useState } from \"react\";\n// import axios from \"axios\";\n// import \"./motorista.css\";\n\n// const Motorista = () => {\n//   const [solicitacoes, setSolicitacoes] = useState([]);\n//   const [modalOpen, setModalOpen] = useState(false);\n//   const [solicitacaoSelecionada, setSolicitacaoSelecionada] = useState(null);\n\n//   const accessToken = localStorage.getItem(\"access_token\");\n\n//   useEffect(() => {\n//     axios\n//       .get(\"http://192.168.0.237:8000/api/solicitacoes/\", {\n//         headers: { Authorization: `Bearer ${accessToken}` },\n//       })\n//       .then((response) => {\n//         const dados = Array.isArray(response.data)\n//           ? response.data\n//           : response.data.results || [];\n\n//         // Adiciona distância, preço e endereços direto no estado\n//         const processadas = dados.map((solicitacao) => ({\n//           ...solicitacao,\n//           distancia: calcularDistancia(\n//             solicitacao.origem_lat,\n//             solicitacao.origem_lng,\n//             solicitacao.destino_lat,\n//             solicitacao.destino_lng\n//           ),\n//           preco: (calcularDistancia(\n//             solicitacao.origem_lat,\n//             solicitacao.origem_lng,\n//             solicitacao.destino_lat,\n//             solicitacao.destino_lng\n//           ) * 1.5).toFixed(2), // R$ por km\n//           origem: solicitacao.origem_endereco || \"Endereço não disponível\",\n//           destino: solicitacao.destino_endereco || \"Endereço não disponível\",\n//         }));\n\n//         setSolicitacoes(processadas);\n//       })\n//       .catch((error) => {\n//         console.error(\"Erro ao buscar solicitações:\", error);\n//       });\n//   }, []);\n\n//   const abrirModal = (solicitacao) => {\n//     setSolicitacaoSelecionada(solicitacao);\n//     setModalOpen(true);\n//   };\n\n//   const fecharModal = () => {\n//     setModalOpen(false);\n//     setSolicitacaoSelecionada(null);\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h1>Solicitações de Corrida</h1>\n//       {solicitacoes.length === 0 ? (\n//         <p>Nenhuma solicitação disponível.</p>\n//       ) : (\n//         <div className=\"grid\">\n//           {solicitacoes.map((solicitacao) => (\n//             <div key={solicitacao.id} className=\"card\" onClick={() => abrirModal(solicitacao)}>\n//               <h3>{solicitacao.cliente_nome}</h3>\n//               <p><strong>Distância:</strong> {solicitacao.distancia} km</p>\n//               <p><strong>Valor:</strong> R$ {solicitacao.preco}</p>\n//             </div>\n//           ))}\n//         </div>\n//       )}\n\n//       {/* Modal */}\n//       {modalOpen && solicitacaoSelecionada && (\n//         <div className=\"modal\">\n//           <div className=\"modal-content\">\n//             <h2>Detalhes da Solicitação</h2>\n//             <p><strong>Cliente:</strong> {solicitacaoSelecionada.cliente_nome}</p>\n//             <p><strong>Distância:</strong> {solicitacaoSelecionada.distancia} km</p>\n//             <p><strong>Valor:</strong> R$ {solicitacaoSelecionada.preco}</p>\n//             <p><strong>Origem:</strong> {solicitacaoSelecionada.origem}</p>\n//             <p><strong>Destino:</strong> {solicitacaoSelecionada.destino}</p>\n//             <button className=\"accept\">Aceitar</button>\n//             <button className=\"reject\">Recusar</button>\n//             <button className=\"close\" onClick={fecharModal}>Fechar</button>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Motorista;\n\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./motorista.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Motorista = () => {\n  _s();\n  const [solicitacoes, setSolicitacoes] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [solicitacaoSelecionada, setSolicitacaoSelecionada] = useState(null);\n  const accessToken = localStorage.getItem(\"access_token\");\n  useEffect(() => {\n    axios.get(\"http://192.168.0.237:8000/api/solicitacoes/\", {\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    }).then(response => {\n      const dados = Array.isArray(response.data) ? response.data : response.data.results || [];\n\n      // Aqui, não precisamos mais calcular a distância e o preço\n      const processadas = dados.map(solicitacao => ({\n        ...solicitacao,\n        origem: solicitacao.origem_endereco || \"Endereço não disponível\",\n        destino: solicitacao.destino_endereco || \"Endereço não disponível\"\n      }));\n      setSolicitacoes(processadas);\n    }).catch(error => {\n      console.error(\"Erro ao buscar solicitações:\", error);\n    });\n  }, [accessToken]);\n  const abrirModal = solicitacao => {\n    setSolicitacaoSelecionada(solicitacao);\n    setModalOpen(true);\n  };\n  const fecharModal = () => {\n    setModalOpen(false);\n    setSolicitacaoSelecionada(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Solicita\\xE7\\xF5es de Corrida\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 7\n    }, this), solicitacoes.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Nenhuma solicita\\xE7\\xE3o dispon\\xEDvel.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: solicitacoes.map(solicitacao => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        onClick: () => abrirModal(solicitacao),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: solicitacao.cliente_nome\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Dist\\xE2ncia:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 18\n          }, this), \" \", solicitacao.distancia, \" km\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Valor:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 18\n          }, this), \" R$ \", solicitacao.preco]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 15\n        }, this)]\n      }, solicitacao.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 9\n    }, this), modalOpen && solicitacaoSelecionada && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Detalhes da Solicita\\xE7\\xE3o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Cliente:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 16\n          }, this), \" \", solicitacaoSelecionada.cliente_nome]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Dist\\xE2ncia:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 16\n          }, this), \" \", solicitacaoSelecionada.distancia, \" km\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Valor:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 16\n          }, this), \" R$ \", solicitacaoSelecionada.preco]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Origem:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 16\n          }, this), \" \", solicitacaoSelecionada.origem]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Destino:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 16\n          }, this), \" \", solicitacaoSelecionada.destino]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"accept\",\n          children: \"Aceitar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reject\",\n          children: \"Recusar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close\",\n          onClick: fecharModal,\n          children: \"Fechar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 454,\n    columnNumber: 5\n  }, this);\n};\n_s(Motorista, \"6CxYI2yeo7med2559o360zsvbj8=\");\n_c = Motorista;\nexport default Motorista;\nvar _c;\n$RefreshReg$(_c, \"Motorista\");","map":{"version":3,"names":["useEffect","useState","axios","jsxDEV","_jsxDEV","Motorista","_s","solicitacoes","setSolicitacoes","modalOpen","setModalOpen","solicitacaoSelecionada","setSolicitacaoSelecionada","accessToken","localStorage","getItem","get","headers","Authorization","then","response","dados","Array","isArray","data","results","processadas","map","solicitacao","origem","origem_endereco","destino","destino_endereco","catch","error","console","abrirModal","fecharModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","cliente_nome","distancia","preco","id","_c","$RefreshReg$"],"sources":["C:/Users/guinh/OneDrive/Documentos/projetoFrete/fretefacil-frontend/src/Motorista.js"],"sourcesContent":["// // import { useEffect, useState } from \"react\";\r\n// // import axios from \"axios\";\r\n// // import './motorista.css'\r\n\r\n// // const Motorista = () => {\r\n// //   const [solicitacoes, setSolicitacoes] = useState([]); \r\n// //   const [modalOpen, setModalOpen] = useState(false); \r\n// //   const [solicitacaoSelecionada, setSolicitacaoSelecionada] = useState(null); \r\n\r\n// //   const accessToken = localStorage.getItem(\"access_token\");\r\n\r\n// //   useEffect(() => {\r\n// //     axios\r\n// //       .get(\"http://192.168.0.237:8000/api/solicitacoes/\", {\r\n// //         headers: { Authorization: `Bearer ${accessToken}` },\r\n// //       })\r\n// //       .then((response) => {\r\n// //         console.log(\"Resposta da API:\", response.data);\r\n// //         setSolicitacoes(Array.isArray(response.data) ? response.data : response.data.results || []);\r\n// //       })\r\n// //       .catch((error) => {\r\n// //         console.error(\"Erro ao buscar solicitações:\", error);\r\n// //       });\r\n// //   }, []);\r\n\r\n// //   const abrirModal = (solicitacao) => {\r\n// //     setSolicitacaoSelecionada(solicitacao);\r\n// //     setModalOpen(true);\r\n// //   };\r\n\r\n// //   const fecharModal = () => {\r\n// //     setModalOpen(false);\r\n// //     setSolicitacaoSelecionada(null);\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className=\"container\">\r\n// //       <h1>Solicitações de Corrida</h1>\r\n// //       {solicitacoes.length === 0 ? (\r\n// //         <p>Nenhuma solicitação disponível.</p>\r\n// //       ) : (\r\n// //         <div className=\"grid\">\r\n// //           {solicitacoes.map((solicitacao) => (\r\n// //             <div key={solicitacao.id} className=\"card\" onClick={() => abrirModal(solicitacao)}>\r\n// //               <h3>{solicitacao.cliente_nome}</h3>\r\n// //               <p>Clique para mais detalhes</p>\r\n// //             </div>\r\n// //           ))}\r\n// //         </div>\r\n// //       )}\r\n\r\n// //       {modalOpen && solicitacaoSelecionada && (\r\n// //         <div className=\"modal\">\r\n// //           <div className=\"modal-content\">\r\n// //             <h2>Detalhes da Solicitação</h2>\r\n// //             <p><strong>Cliente:</strong> {solicitacaoSelecionada.cliente_nome}</p>\r\n// //             <p><strong>Detalhes:</strong> {solicitacaoSelecionada.detalhes}</p>\r\n// //             <button className=\"accept\">Aceitar</button>\r\n// //             <button className=\"reject\">Recusar</button>\r\n// //             <button className=\"close\" onClick={fecharModal}>Fechar</button>\r\n// //           </div>\r\n// //         </div>\r\n// //       )}\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default Motorista;\r\n\r\n\r\n// // import { useEffect, useState } from \"react\";\r\n// // import axios from \"axios\";\r\n// // import \"./motorista.css\";\r\n\r\n// // // Função para calcular distância entre dois pontos em km\r\n// // const calcularDistancia = (lat1, lon1, lat2, lon2) => {\r\n// //   if (!lat1 || !lon1 || !lat2 || !lon2) return 0; // Evita NaN se algum valor for indefinido\r\n\r\n// //   const R = 6371; // Raio da Terra em km\r\n// //   const dLat = ((lat2 - lat1) * Math.PI) / 180;\r\n// //   const dLon = ((lon2 - lon1) * Math.PI) / 180;\r\n// //   const a =\r\n// //     Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n// //     Math.cos((lat1 * Math.PI) / 180) *\r\n// //       Math.cos((lat2 * Math.PI) / 180) *\r\n// //       Math.sin(dLon / 2) *\r\n// //       Math.sin(dLon / 2);\r\n// //   const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n// //   return (R * c).toFixed(2); // Retorna distância em km com duas casas decimais\r\n// // };\r\n\r\n// // // Função para obter endereço a partir das coordenadas\r\n// // const obterEndereco = async (lat, lng) => {\r\n// //   if (!lat || !lng) return \"Endereço não disponível\";\r\n\r\n// //   try {\r\n// //     const response = await fetch(\r\n// //       `https://nominatim.openstreetmap.org/reverse?lat=${lat}&lon=${lng}&format=json`\r\n// //     );\r\n// //     const data = await response.json();\r\n// //     const { road, suburb, city } = data.address;\r\n// //     return [road, suburb, city].filter(Boolean).join(\", \") || \"Endereço não encontrado\";\r\n// //   } catch (error) {\r\n// //     console.error(\"Erro ao obter endereço:\", error);\r\n// //     return \"Erro ao obter endereço\";\r\n// //   }\r\n// // };\r\n\r\n// // const Motorista = () => {\r\n// //   const [solicitacoes, setSolicitacoes] = useState([]); // Lista de solicitações\r\n// //   const [modalOpen, setModalOpen] = useState(false); // Controle do modal\r\n// //   const [solicitacaoSelecionada, setSolicitacaoSelecionada] = useState(null); // Armazena solicitação clicada\r\n// //   const [enderecos, setEnderecos] = useState({}); // Armazena os endereços de origem e destino\r\n\r\n// //   const accessToken = localStorage.getItem(\"access_token\");\r\n\r\n// //   useEffect(() => {\r\n// //     axios\r\n// //       .get(\"http://192.168.0.237:8000/api/solicitacoes/\", {\r\n// //         headers: { Authorization: `Bearer ${accessToken}` },\r\n// //       })\r\n// //       .then(async (response) => {\r\n// //         const dados = Array.isArray(response.data)\r\n// //           ? response.data\r\n// //           : response.data.results || [];\r\n\r\n// //         // Processa cada solicitação para calcular distância e buscar endereço\r\n// //         const processadas = await Promise.all(\r\n// //           dados.map(async (solicitacao) => {\r\n// //             const distancia = calcularDistancia(\r\n// //               solicitacao.origem_lat,\r\n// //               solicitacao.origem_lng,\r\n// //               solicitacao.destino_lat,\r\n// //               solicitacao.destino_lng\r\n// //             );\r\n// //             const preco = (distancia * 1.5).toFixed(2); // R$ por km\r\n\r\n// //             // Obtém os endereços de origem e destino\r\n// //             const origem = await obterEndereco(solicitacao.origem_lat, solicitacao.origem_lng);\r\n// //             const destino = await obterEndereco(solicitacao.destino_lat, solicitacao.destino_lng);\r\n\r\n// //             return { ...solicitacao, distancia, preco, origem, destino };\r\n// //           })\r\n// //         );\r\n\r\n// //         setSolicitacoes(processadas);\r\n// //       })\r\n// //       .catch((error) => {\r\n// //         console.error(\"Erro ao buscar solicitações:\", error);\r\n// //       });\r\n// //   }, []);\r\n\r\n// //   const abrirModal = (solicitacao) => {\r\n// //     setSolicitacaoSelecionada(solicitacao);\r\n// //     setModalOpen(true);\r\n// //   };\r\n\r\n// //   const fecharModal = () => {\r\n// //     setModalOpen(false);\r\n// //     setSolicitacaoSelecionada(null);\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className=\"container\">\r\n// //       <h1>Solicitações de Corrida</h1>\r\n// //       {solicitacoes.length === 0 ? (\r\n// //         <p>Nenhuma solicitação disponível.</p>\r\n// //       ) : (\r\n// //         <div className=\"grid\">\r\n// //           {solicitacoes.map((solicitacao) => (\r\n// //             <div key={solicitacao.id} className=\"card\" onClick={() => abrirModal(solicitacao)}>\r\n// //               <h3>{solicitacao.cliente_nome}</h3>\r\n// //               <p><strong>Distância:</strong> {solicitacao.distancia} km</p>\r\n// //               <p><strong>Valor:</strong> R$ {solicitacao.preco}</p>\r\n// //             </div>\r\n// //           ))}\r\n// //         </div>\r\n// //       )}\r\n\r\n// //       {modalOpen && solicitacaoSelecionada && (\r\n// //         <div className=\"modal\">\r\n// //           <div className=\"modal-content\">\r\n// //             <h2>Detalhes da Solicitação</h2>\r\n// //             <p><strong>Cliente:</strong> {solicitacaoSelecionada.cliente_nome}</p>\r\n// //             <p><strong>Distância:</strong> {solicitacaoSelecionada.distancia} km</p>\r\n// //             <p><strong>Valor:</strong> R$ {solicitacaoSelecionada.preco}</p>\r\n// //             <p><strong>Origem:</strong> {solicitacaoSelecionada.origem}</p>\r\n// //             <p><strong>Destino:</strong> {solicitacaoSelecionada.destino}</p>\r\n// //             <button className=\"accept\">Aceitar</button>\r\n// //             <button className=\"reject\">Recusar</button>\r\n// //             <button className=\"close\" onClick={fecharModal}>Fechar</button>\r\n// //           </div>\r\n// //         </div>\r\n// //       )}\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default Motorista;\r\n\r\n// import { useEffect, useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import \"./motorista.css\";\r\n\r\n// const calcularDistancia = (lat1, lon1, lat2, lon2) => {\r\n//   if (!lat1 || !lon1 || !lat2 || !lon2) return \"0\"; // Retorna \"0\" se faltar algum dado\r\n\r\n//   const R = 6371; // Raio da Terra em km\r\n//   const dLat = ((lat2 - lat1) * Math.PI) / 180;\r\n//   const dLon = ((lon2 - lon1) * Math.PI) / 180;\r\n//   const a =\r\n//     Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n//     Math.cos((lat1 * Math.PI) / 180) *\r\n//       Math.cos((lat2 * Math.PI) / 180) *\r\n//       Math.sin(dLon / 2) *\r\n//       Math.sin(dLon / 2);\r\n//   const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n//   return (R * c).toFixed(2); // Retorna distância com 2 casas decimais\r\n// };\r\n\r\n// const Motorista = () => {\r\n//   const [solicitacoes, setSolicitacoes] = useState([]);\r\n//   const [modalOpen, setModalOpen] = useState(false);\r\n//   const [solicitacaoSelecionada, setSolicitacaoSelecionada] = useState(null);\r\n\r\n//   const accessToken = localStorage.getItem(\"access_token\");\r\n\r\n//   useEffect(() => {\r\n//     axios\r\n//       .get(\"http://192.168.0.237:8000/api/solicitacoes/\", {\r\n//         headers: { Authorization: `Bearer ${accessToken}` },\r\n//       })\r\n//       .then((response) => {\r\n//         const dados = Array.isArray(response.data)\r\n//           ? response.data\r\n//           : response.data.results || [];\r\n\r\n//         // Adiciona distância, preço e endereços direto no estado\r\n//         const processadas = dados.map((solicitacao) => ({\r\n//           ...solicitacao,\r\n//           distancia: calcularDistancia(\r\n//             solicitacao.origem_lat,\r\n//             solicitacao.origem_lng,\r\n//             solicitacao.destino_lat,\r\n//             solicitacao.destino_lng\r\n//           ),\r\n//           preco: (calcularDistancia(\r\n//             solicitacao.origem_lat,\r\n//             solicitacao.origem_lng,\r\n//             solicitacao.destino_lat,\r\n//             solicitacao.destino_lng\r\n//           ) * 1.5).toFixed(2), // R$ por km\r\n//           origem: solicitacao.origem_endereco || \"Endereço não disponível\",\r\n//           destino: solicitacao.destino_endereco || \"Endereço não disponível\",\r\n//         }));\r\n\r\n//         setSolicitacoes(processadas);\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error(\"Erro ao buscar solicitações:\", error);\r\n//       });\r\n//   }, []);\r\n\r\n//   const abrirModal = (solicitacao) => {\r\n//     setSolicitacaoSelecionada(solicitacao);\r\n//     setModalOpen(true);\r\n//   };\r\n\r\n//   const fecharModal = () => {\r\n//     setModalOpen(false);\r\n//     setSolicitacaoSelecionada(null);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       <h1>Solicitações de Corrida</h1>\r\n//       {solicitacoes.length === 0 ? (\r\n//         <p>Nenhuma solicitação disponível.</p>\r\n//       ) : (\r\n//         <div className=\"grid\">\r\n//           {solicitacoes.map((solicitacao) => (\r\n//             <div key={solicitacao.id} className=\"card\" onClick={() => abrirModal(solicitacao)}>\r\n//               <h3>{solicitacao.cliente_nome}</h3>\r\n//               <p><strong>Distância:</strong> {solicitacao.distancia} km</p>\r\n//               <p><strong>Valor:</strong> R$ {solicitacao.preco}</p>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//       )}\r\n\r\n//       {modalOpen && solicitacaoSelecionada && (\r\n//         <div className=\"modal\">\r\n//           <div className=\"modal-content\">\r\n//             <h2>Detalhes da Solicitação</h2>\r\n//             <p><strong>Cliente:</strong> {solicitacaoSelecionada.cliente_nome}</p>\r\n//             <p><strong>Distância:</strong> {solicitacaoSelecionada.distancia} km</p>\r\n//             <p><strong>Valor:</strong> R$ {solicitacaoSelecionada.preco}</p>\r\n//             <p><strong>Origem:</strong> {solicitacaoSelecionada.origem}</p>\r\n//             <p><strong>Destino:</strong> {solicitacaoSelecionada.destino}</p>\r\n//             <button className=\"accept\">Aceitar</button>\r\n//             <button className=\"reject\">Recusar</button>\r\n//             <button className=\"close\" onClick={fecharModal}>Fechar</button>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Motorista;\r\n\r\n// import { useEffect, useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import \"./motorista.css\";\r\n\r\n// const Motorista = () => {\r\n//   const [solicitacoes, setSolicitacoes] = useState([]);\r\n//   const [modalOpen, setModalOpen] = useState(false);\r\n//   const [solicitacaoSelecionada, setSolicitacaoSelecionada] = useState(null);\r\n\r\n//   const accessToken = localStorage.getItem(\"access_token\");\r\n\r\n//   useEffect(() => {\r\n//     axios\r\n//       .get(\"http://192.168.0.237:8000/api/solicitacoes/\", {\r\n//         headers: { Authorization: `Bearer ${accessToken}` },\r\n//       })\r\n//       .then((response) => {\r\n//         const dados = Array.isArray(response.data)\r\n//           ? response.data\r\n//           : response.data.results || [];\r\n\r\n//         // Adiciona distância, preço e endereços direto no estado\r\n//         const processadas = dados.map((solicitacao) => ({\r\n//           ...solicitacao,\r\n//           distancia: calcularDistancia(\r\n//             solicitacao.origem_lat,\r\n//             solicitacao.origem_lng,\r\n//             solicitacao.destino_lat,\r\n//             solicitacao.destino_lng\r\n//           ),\r\n//           preco: (calcularDistancia(\r\n//             solicitacao.origem_lat,\r\n//             solicitacao.origem_lng,\r\n//             solicitacao.destino_lat,\r\n//             solicitacao.destino_lng\r\n//           ) * 1.5).toFixed(2), // R$ por km\r\n//           origem: solicitacao.origem_endereco || \"Endereço não disponível\",\r\n//           destino: solicitacao.destino_endereco || \"Endereço não disponível\",\r\n//         }));\r\n\r\n//         setSolicitacoes(processadas);\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error(\"Erro ao buscar solicitações:\", error);\r\n//       });\r\n//   }, []);\r\n\r\n//   const abrirModal = (solicitacao) => {\r\n//     setSolicitacaoSelecionada(solicitacao);\r\n//     setModalOpen(true);\r\n//   };\r\n\r\n//   const fecharModal = () => {\r\n//     setModalOpen(false);\r\n//     setSolicitacaoSelecionada(null);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       <h1>Solicitações de Corrida</h1>\r\n//       {solicitacoes.length === 0 ? (\r\n//         <p>Nenhuma solicitação disponível.</p>\r\n//       ) : (\r\n//         <div className=\"grid\">\r\n//           {solicitacoes.map((solicitacao) => (\r\n//             <div key={solicitacao.id} className=\"card\" onClick={() => abrirModal(solicitacao)}>\r\n//               <h3>{solicitacao.cliente_nome}</h3>\r\n//               <p><strong>Distância:</strong> {solicitacao.distancia} km</p>\r\n//               <p><strong>Valor:</strong> R$ {solicitacao.preco}</p>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Modal */}\r\n//       {modalOpen && solicitacaoSelecionada && (\r\n//         <div className=\"modal\">\r\n//           <div className=\"modal-content\">\r\n//             <h2>Detalhes da Solicitação</h2>\r\n//             <p><strong>Cliente:</strong> {solicitacaoSelecionada.cliente_nome}</p>\r\n//             <p><strong>Distância:</strong> {solicitacaoSelecionada.distancia} km</p>\r\n//             <p><strong>Valor:</strong> R$ {solicitacaoSelecionada.preco}</p>\r\n//             <p><strong>Origem:</strong> {solicitacaoSelecionada.origem}</p>\r\n//             <p><strong>Destino:</strong> {solicitacaoSelecionada.destino}</p>\r\n//             <button className=\"accept\">Aceitar</button>\r\n//             <button className=\"reject\">Recusar</button>\r\n//             <button className=\"close\" onClick={fecharModal}>Fechar</button>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Motorista;\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./motorista.css\";\r\n\r\nconst Motorista = () => {\r\n  const [solicitacoes, setSolicitacoes] = useState([]);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [solicitacaoSelecionada, setSolicitacaoSelecionada] = useState(null);\r\n\r\n  const accessToken = localStorage.getItem(\"access_token\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://192.168.0.237:8000/api/solicitacoes/\", {\r\n        headers: { Authorization: `Bearer ${accessToken}` },\r\n      })\r\n      .then((response) => {\r\n        const dados = Array.isArray(response.data)\r\n          ? response.data\r\n          : response.data.results || [];\r\n\r\n        // Aqui, não precisamos mais calcular a distância e o preço\r\n        const processadas = dados.map((solicitacao) => ({\r\n          ...solicitacao,\r\n          origem: solicitacao.origem_endereco || \"Endereço não disponível\",\r\n          destino: solicitacao.destino_endereco || \"Endereço não disponível\",\r\n        }));\r\n\r\n        setSolicitacoes(processadas);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Erro ao buscar solicitações:\", error);\r\n      });\r\n  }, [accessToken]);\r\n\r\n  const abrirModal = (solicitacao) => {\r\n    setSolicitacaoSelecionada(solicitacao);\r\n    setModalOpen(true);\r\n  };\r\n\r\n  const fecharModal = () => {\r\n    setModalOpen(false);\r\n    setSolicitacaoSelecionada(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Solicitações de Corrida</h1>\r\n      {solicitacoes.length === 0 ? (\r\n        <p>Nenhuma solicitação disponível.</p>\r\n      ) : (\r\n        <div className=\"grid\">\r\n          {solicitacoes.map((solicitacao) => (\r\n            <div key={solicitacao.id} className=\"card\" onClick={() => abrirModal(solicitacao)}>\r\n              <h3>{solicitacao.cliente_nome}</h3>\r\n              <p><strong>Distância:</strong> {solicitacao.distancia} km</p>\r\n              <p><strong>Valor:</strong> R$ {solicitacao.preco}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* Modal */}\r\n      {modalOpen && solicitacaoSelecionada && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <h2>Detalhes da Solicitação</h2>\r\n            <p><strong>Cliente:</strong> {solicitacaoSelecionada.cliente_nome}</p>\r\n            <p><strong>Distância:</strong> {solicitacaoSelecionada.distancia} km</p>\r\n            <p><strong>Valor:</strong> R$ {solicitacaoSelecionada.preco}</p>\r\n            <p><strong>Origem:</strong> {solicitacaoSelecionada.origem}</p>\r\n            <p><strong>Destino:</strong> {solicitacaoSelecionada.destino}</p>\r\n            <button className=\"accept\">Aceitar</button>\r\n            <button className=\"reject\">Recusar</button>\r\n            <button className=\"close\" onClick={fecharModal}>Fechar</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Motorista;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACU,sBAAsB,EAAEC,yBAAyB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE1E,MAAMY,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;EAExDf,SAAS,CAAC,MAAM;IACdE,KAAK,CACFc,GAAG,CAAC,6CAA6C,EAAE;MAClDC,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUL,WAAW;MAAG;IACpD,CAAC,CAAC,CACDM,IAAI,CAAEC,QAAQ,IAAK;MAClB,MAAMC,KAAK,GAAGC,KAAK,CAACC,OAAO,CAACH,QAAQ,CAACI,IAAI,CAAC,GACtCJ,QAAQ,CAACI,IAAI,GACbJ,QAAQ,CAACI,IAAI,CAACC,OAAO,IAAI,EAAE;;MAE/B;MACA,MAAMC,WAAW,GAAGL,KAAK,CAACM,GAAG,CAAEC,WAAW,KAAM;QAC9C,GAAGA,WAAW;QACdC,MAAM,EAAED,WAAW,CAACE,eAAe,IAAI,yBAAyB;QAChEC,OAAO,EAAEH,WAAW,CAACI,gBAAgB,IAAI;MAC3C,CAAC,CAAC,CAAC;MAEHxB,eAAe,CAACkB,WAAW,CAAC;IAC9B,CAAC,CAAC,CACDO,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD,CAAC,CAAC;EACN,CAAC,EAAE,CAACrB,WAAW,CAAC,CAAC;EAEjB,MAAMuB,UAAU,GAAIR,WAAW,IAAK;IAClChB,yBAAyB,CAACgB,WAAW,CAAC;IACtClB,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAM2B,WAAW,GAAGA,CAAA,KAAM;IACxB3B,YAAY,CAAC,KAAK,CAAC;IACnBE,yBAAyB,CAAC,IAAI,CAAC;EACjC,CAAC;EAED,oBACER,OAAA;IAAKkC,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBnC,OAAA;MAAAmC,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC/BpC,YAAY,CAACqC,MAAM,KAAK,CAAC,gBACxBxC,OAAA;MAAAmC,QAAA,EAAG;IAA+B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEtCvC,OAAA;MAAKkC,SAAS,EAAC,MAAM;MAAAC,QAAA,EAClBhC,YAAY,CAACoB,GAAG,CAAEC,WAAW,iBAC5BxB,OAAA;QAA0BkC,SAAS,EAAC,MAAM;QAACO,OAAO,EAAEA,CAAA,KAAMT,UAAU,CAACR,WAAW,CAAE;QAAAW,QAAA,gBAChFnC,OAAA;UAAAmC,QAAA,EAAKX,WAAW,CAACkB;QAAY;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACnCvC,OAAA;UAAAmC,QAAA,gBAAGnC,OAAA;YAAAmC,QAAA,EAAQ;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACf,WAAW,CAACmB,SAAS,EAAC,KAAG;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC7DvC,OAAA;UAAAmC,QAAA,gBAAGnC,OAAA;YAAAmC,QAAA,EAAQ;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,QAAI,EAACf,WAAW,CAACoB,KAAK;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAH7Cf,WAAW,CAACqB,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAInB,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN,EAGAlC,SAAS,IAAIE,sBAAsB,iBAClCP,OAAA;MAAKkC,SAAS,EAAC,OAAO;MAAAC,QAAA,eACpBnC,OAAA;QAAKkC,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BnC,OAAA;UAAAmC,QAAA,EAAI;QAAuB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChCvC,OAAA;UAAAmC,QAAA,gBAAGnC,OAAA;YAAAmC,QAAA,EAAQ;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAAChC,sBAAsB,CAACmC,YAAY;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtEvC,OAAA;UAAAmC,QAAA,gBAAGnC,OAAA;YAAAmC,QAAA,EAAQ;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAAChC,sBAAsB,CAACoC,SAAS,EAAC,KAAG;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACxEvC,OAAA;UAAAmC,QAAA,gBAAGnC,OAAA;YAAAmC,QAAA,EAAQ;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,QAAI,EAAChC,sBAAsB,CAACqC,KAAK;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChEvC,OAAA;UAAAmC,QAAA,gBAAGnC,OAAA;YAAAmC,QAAA,EAAQ;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAAChC,sBAAsB,CAACkB,MAAM;QAAA;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/DvC,OAAA;UAAAmC,QAAA,gBAAGnC,OAAA;YAAAmC,QAAA,EAAQ;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAAChC,sBAAsB,CAACoB,OAAO;QAAA;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjEvC,OAAA;UAAQkC,SAAS,EAAC,QAAQ;UAAAC,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC3CvC,OAAA;UAAQkC,SAAS,EAAC,QAAQ;UAAAC,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC3CvC,OAAA;UAAQkC,SAAS,EAAC,OAAO;UAACO,OAAO,EAAER,WAAY;UAAAE,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACrC,EAAA,CA5EID,SAAS;AAAA6C,EAAA,GAAT7C,SAAS;AA8Ef,eAAeA,SAAS;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}