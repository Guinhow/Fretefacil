{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guinh\\\\OneDrive\\\\Documentos\\\\projetoFrete\\\\fretefacil-frontend\\\\src\\\\NovaSolicitacao.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, useMapEvents } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport api from './Api';\nimport { useNavigate } from 'react-router-dom';\nimport './NovaSolicitacao.css';\n\n// ícones do Leaflet\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\n\n//  coordenadas em endereço \nconst fetchAddressFromCoordinates = async (lat, lng) => {\n  try {\n    const response = await fetch(`https://nominatim.openstreetmap.org/reverse?lat=${lat}&lon=${lng}&format=json`);\n    const data = await response.json();\n    const address = data.address;\n    const rua = address.road || address.pedestrian || '';\n    const cidade = address.city || address.town || address.village || '';\n    const bairro = address.suburb || '';\n    const formattedAddress = [rua, bairro, cidade].filter(Boolean).join(', ');\n    return formattedAddress;\n  } catch (error) {\n    console.error('Erro ao converter coordenadas em endereço:', error);\n    return '';\n  }\n};\nconst fetchCoordinatesFromAddress = async endereco => {\n  try {\n    const response = await fetch(`https://nominatim.openstreetmap.org/search?q=${encodeURIComponent(endereco)}&format=json&limit=1`);\n    const data = await response.json();\n    if (data && data[0]) {\n      return {\n        latitude: parseFloat(data[0].lat),\n        longitude: parseFloat(data[0].lon)\n      };\n    } else {\n      throw new Error('Endereço não encontrado');\n    }\n  } catch (error) {\n    console.error('Erro ao converter endereço em coordenadas:', error);\n    return null;\n  }\n};\nconst calcularDistancia = (pontoOrigem, pontoDestino) => {\n  // Verifique se os pontos são válidos\n  if (!pontoOrigem || !pontoDestino || isNaN(pontoOrigem.latitude) || isNaN(pontoOrigem.longitude) || isNaN(pontoDestino.latitude) || isNaN(pontoDestino.longitude)) {\n    console.error('Erro: pontos inválidos ou NaN');\n    return 0;\n  }\n\n  // Fórmula de Haversine para calcular a distância entre dois pontos\n  const φ1 = pontoOrigem.latitude * (Math.PI / 180); // Convertendo para radianos\n  const φ2 = pontoDestino.latitude * (Math.PI / 180);\n  const Δφ = (pontoDestino.latitude - pontoOrigem.latitude) * (Math.PI / 180);\n  const Δλ = (pontoDestino.longitude - pontoOrigem.longitude) * (Math.PI / 180);\n  const a = Math.sin(Δφ / 2) * Math.sin(Δφ / 2) + Math.cos(φ1) * Math.cos(φ2) * Math.sin(Δλ / 2) * Math.sin(Δλ / 2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  const raioTerra = 6371; // Raio da Terra em km\n  const distancia = raioTerra * c; // Distância em km\n\n  return distancia;\n};\nconst calcularDistanciaEntreEnderecos = async (enderecoOrigem, enderecoDestino) => {\n  // Obtenha as coordenadas para os dois endereços\n  const pontoOrigem = await fetchCoordinatesFromAddress(enderecoOrigem);\n  const pontoDestino = await fetchCoordinatesFromAddress(enderecoDestino);\n  if (!pontoOrigem || !pontoDestino) {\n    console.error('Erro: não foi possível obter coordenadas');\n    return;\n  }\n\n  // Calcule a distância usando a função de Haversine\n  const distancia = calcularDistancia(pontoOrigem, pontoDestino);\n  console.log('Distância entre os endereços: ', distancia, 'km');\n};\n\n// cliques no mapa para selecionar localização\nconst MapSelector = ({\n  selectMode,\n  onLocationSelected\n}) => {\n  _s();\n  useMapEvents({\n    click: async e => {\n      const address = await fetchAddressFromCoordinates(e.latlng.lat, e.latlng.lng);\n      onLocationSelected(e.latlng, address, selectMode);\n    }\n  });\n  return null;\n};\n_s(MapSelector, \"Ld/tk8Iz8AdZhC1l7acENaOEoCo=\", false, function () {\n  return [useMapEvents];\n});\n_c = MapSelector;\nfunction NovaSolicitacao() {\n  _s2();\n  const [data, setData] = useState('');\n  const [hora, setHora] = useState('');\n  const [descricao, setDescricao] = useState('');\n  const [origem, setOrigem] = useState('');\n  const [destino, setDestino] = useState('');\n  const [markerOrigin, setMarkerOrigin] = useState(null);\n  const [markerDestination, setMarkerDestination] = useState(null);\n  const [distancia, setDistancia] = useState(null);\n\n  // posição atual do usuário \n  const [currentPosition, setCurrentPosition] = useState([-22.925867, -43.011017]); //home\n  const [selectMode, setSelectMode] = useState('origin');\n  const navigate = useNavigate();\n\n  // localização atual do usuário\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        setCurrentPosition([position.coords.latitude, position.coords.longitude]);\n      });\n    }\n  }, []);\n\n  // atualiza origem ou destino \n  const handleLocationSelected = (latlng, address, mode) => {\n    if (mode === 'origin') {\n      setMarkerOrigin(latlng);\n      setOrigem(address);\n    } else {\n      setMarkerDestination(latlng);\n      setDestino(address);\n    }\n    calcularDistancia(latlng, mode === 'origin' ? markerDestination : markerOrigin);\n  };\n\n  // Calcula a distância entre origem e destino\n  const calcularDistancia = (novaPosicao, outroPonto) => {\n    if (novaPosicao && outroPonto) {\n      const ponto1 = L.latLng(novaPosicao.lat, novaPosicao.lng);\n      const ponto2 = L.latLng(outroPonto.lat, outroPonto.lng);\n      const distanciaMetros = ponto1.distanceTo(ponto2);\n      const distanciaKm = (distanciaMetros / 1000).toFixed(2);\n      setDistancia(distanciaKm);\n    }\n  };\n\n  // ajuste da posição do marcador\n  const handleDragEnd = async (e, mode) => {\n    const marker = e.target;\n    const position = marker.getLatLng();\n    const address = await fetchAddressFromCoordinates(position.lat, position.lng);\n    if (mode === 'origin') {\n      setMarkerOrigin(position);\n      setOrigem(address);\n    } else {\n      setMarkerDestination(position);\n      setDestino(address);\n    }\n    calcularDistancia(position, mode === 'origin' ? markerDestination : markerOrigin);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    api.post('solicitacoes/', {\n      origem,\n      destino,\n      distancia,\n      data,\n      hora,\n      descricao\n    }).then(response => {\n      alert('Solicitação criada com sucesso!');\n      navigate('/solicitacoes');\n    }).catch(error => {\n      var _error$response;\n      console.error(\"Erro ao criar solicitação:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      alert('Ocorreu um erro ao criar a solicitação.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"corpo\",\n    children: [/*#__PURE__*/_jsxDEV(MapContainer, {\n      className: \"mapcontainer\",\n      center: currentPosition,\n      zoom: 13,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 OpenStreetMap contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapSelector, {\n        selectMode: selectMode,\n        onLocationSelected: handleLocationSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), markerOrigin && /*#__PURE__*/_jsxDEV(Marker, {\n        position: markerOrigin,\n        draggable: true,\n        eventHandlers: {\n          dragend: e => handleDragEnd(e, 'origin')\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this), markerDestination && /*#__PURE__*/_jsxDEV(Marker, {\n        position: markerDestination,\n        draggable: true,\n        eventHandlers: {\n          dragend: e => handleDragEnd(e, 'destination')\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"boxdestination\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"boxorigem\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Origem:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onClick: () => setSelectMode('origin'),\n          type: \"text\",\n          value: origem,\n          readOnly: true,\n          placeholder: \"Clique no mapa para selecionar a origem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"boxdestino\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Destino:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onClick: () => setSelectMode('destination'),\n          type: \"text\",\n          value: destino,\n          readOnly: true,\n          placeholder: \"Clique no mapa para selecionar o destino\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), distancia && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"boxdistancia\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Dist\\xE2ncia:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: `${distancia} km`,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"boxsolicitacao\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Nova Solicita\\xE7\\xE3o de Servi\\xE7o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Data:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: data,\n            onChange: e => setData(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Hora:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            value: hora,\n            onChange: e => setHora(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Descri\\xE7\\xE3o:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: descricao,\n            onChange: e => setDescricao(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Criar Solicita\\xE7\\xE3o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n}\n_s2(NovaSolicitacao, \"qke1rSGWaRd5evB7PJ6i29wKKJ8=\", false, function () {\n  return [useNavigate];\n});\n_c2 = NovaSolicitacao;\nexport default NovaSolicitacao;\nvar _c, _c2;\n$RefreshReg$(_c, \"MapSelector\");\n$RefreshReg$(_c2, \"NovaSolicitacao\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","Marker","useMapEvents","L","api","useNavigate","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","fetchAddressFromCoordinates","lat","lng","response","fetch","data","json","address","rua","road","pedestrian","cidade","city","town","village","bairro","suburb","formattedAddress","filter","Boolean","join","error","console","fetchCoordinatesFromAddress","endereco","encodeURIComponent","latitude","parseFloat","longitude","lon","Error","calcularDistancia","pontoOrigem","pontoDestino","isNaN","φ1","Math","PI","φ2","Δφ","Δλ","a","sin","cos","c","atan2","sqrt","raioTerra","distancia","calcularDistanciaEntreEnderecos","enderecoOrigem","enderecoDestino","log","MapSelector","selectMode","onLocationSelected","_s","click","e","latlng","_c","NovaSolicitacao","_s2","setData","hora","setHora","descricao","setDescricao","origem","setOrigem","destino","setDestino","markerOrigin","setMarkerOrigin","markerDestination","setMarkerDestination","setDistancia","currentPosition","setCurrentPosition","setSelectMode","navigate","navigator","geolocation","getCurrentPosition","position","coords","handleLocationSelected","mode","novaPosicao","outroPonto","ponto1","latLng","ponto2","distanciaMetros","distanceTo","distanciaKm","toFixed","handleDragEnd","marker","target","getLatLng","handleSubmit","preventDefault","post","then","alert","catch","_error$response","message","className","children","center","zoom","attribution","url","fileName","_jsxFileName","lineNumber","columnNumber","draggable","eventHandlers","dragend","onClick","type","value","readOnly","placeholder","onSubmit","onChange","required","_c2","$RefreshReg$"],"sources":["C:/Users/guinh/OneDrive/Documentos/projetoFrete/fretefacil-frontend/src/NovaSolicitacao.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { MapContainer, TileLayer, Marker, useMapEvents } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport L from 'leaflet';\r\nimport api from './Api';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './NovaSolicitacao.css'\r\n\r\n// ícones do Leaflet\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\r\n});\r\n\r\n//  coordenadas em endereço \r\nconst fetchAddressFromCoordinates = async (lat, lng) => {\r\n  try {\r\n    const response = await fetch(\r\n      `https://nominatim.openstreetmap.org/reverse?lat=${lat}&lon=${lng}&format=json`\r\n    );\r\n    const data = await response.json();\r\n    const address = data.address;\r\n    const rua = address.road || address.pedestrian || '';\r\n    const cidade = address.city || address.town || address.village || '';\r\n    const bairro = address.suburb || '';\r\n    const formattedAddress = [rua, bairro, cidade].filter(Boolean).join(', ');\r\n    \r\n    return formattedAddress;\r\n  } catch (error) {\r\n    console.error('Erro ao converter coordenadas em endereço:', error);\r\n    return '';\r\n  }\r\n};\r\n\r\nconst fetchCoordinatesFromAddress = async (endereco) => {\r\n  try {\r\n    const response = await fetch(\r\n      `https://nominatim.openstreetmap.org/search?q=${encodeURIComponent(endereco)}&format=json&limit=1`\r\n    );\r\n    const data = await response.json();\r\n    if (data && data[0]) {\r\n      return {\r\n        latitude: parseFloat(data[0].lat),\r\n        longitude: parseFloat(data[0].lon)\r\n      };\r\n    } else {\r\n      throw new Error('Endereço não encontrado');\r\n    }\r\n  } catch (error) {\r\n    console.error('Erro ao converter endereço em coordenadas:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\nconst calcularDistancia = (pontoOrigem, pontoDestino) => {\r\n  // Verifique se os pontos são válidos\r\n  if (\r\n    !pontoOrigem ||\r\n    !pontoDestino ||\r\n    isNaN(pontoOrigem.latitude) ||\r\n    isNaN(pontoOrigem.longitude) ||\r\n    isNaN(pontoDestino.latitude) ||\r\n    isNaN(pontoDestino.longitude)\r\n  ) {\r\n    console.error('Erro: pontos inválidos ou NaN');\r\n    return 0;\r\n  }\r\n\r\n  // Fórmula de Haversine para calcular a distância entre dois pontos\r\n  const φ1 = pontoOrigem.latitude * (Math.PI / 180); // Convertendo para radianos\r\n  const φ2 = pontoDestino.latitude * (Math.PI / 180);\r\n  const Δφ = (pontoDestino.latitude - pontoOrigem.latitude) * (Math.PI / 180);\r\n  const Δλ = (pontoDestino.longitude - pontoOrigem.longitude) * (Math.PI / 180);\r\n\r\n  const a =\r\n    Math.sin(Δφ / 2) * Math.sin(Δφ / 2) +\r\n    Math.cos(φ1) * Math.cos(φ2) * Math.sin(Δλ / 2) * Math.sin(Δλ / 2);\r\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n\r\n  const raioTerra = 6371; // Raio da Terra em km\r\n  const distancia = raioTerra * c; // Distância em km\r\n\r\n  return distancia;\r\n};\r\n\r\nconst calcularDistanciaEntreEnderecos = async (enderecoOrigem, enderecoDestino) => {\r\n  // Obtenha as coordenadas para os dois endereços\r\n  const pontoOrigem = await fetchCoordinatesFromAddress(enderecoOrigem);\r\n  const pontoDestino = await fetchCoordinatesFromAddress(enderecoDestino);\r\n\r\n  if (!pontoOrigem || !pontoDestino) {\r\n    console.error('Erro: não foi possível obter coordenadas');\r\n    return;\r\n  }\r\n\r\n  // Calcule a distância usando a função de Haversine\r\n  const distancia = calcularDistancia(pontoOrigem, pontoDestino);\r\n  console.log('Distância entre os endereços: ', distancia, 'km');\r\n};\r\n\r\n// cliques no mapa para selecionar localização\r\nconst MapSelector = ({ selectMode, onLocationSelected }) => {\r\n  useMapEvents({\r\n    click: async (e) => {\r\n      const address = await fetchAddressFromCoordinates(e.latlng.lat, e.latlng.lng);\r\n      onLocationSelected(e.latlng, address, selectMode);\r\n    },\r\n  });\r\n  return null;\r\n};\r\n\r\nfunction NovaSolicitacao() {\r\n  const [data, setData] = useState('');\r\n  const [hora, setHora] = useState('');\r\n  const [descricao, setDescricao] = useState('');\r\n  const [origem, setOrigem] = useState('');\r\n  const [destino, setDestino] = useState('');\r\n  const [markerOrigin, setMarkerOrigin] = useState(null);\r\n  const [markerDestination, setMarkerDestination] = useState(null);\r\n  const [distancia, setDistancia] = useState(null);\r\n  \r\n  // posição atual do usuário \r\n  const [currentPosition, setCurrentPosition] = useState([ -22.925867, -43.011017 ]); //home\r\n  const [selectMode, setSelectMode] = useState('origin'); \r\n  const navigate = useNavigate();\r\n\r\n  // localização atual do usuário\r\n  useEffect(() => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n        setCurrentPosition([\r\n          position.coords.latitude,\r\n          position.coords.longitude,\r\n        ]);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  // atualiza origem ou destino \r\n  const handleLocationSelected = (latlng, address, mode) => {\r\n    if (mode === 'origin') {\r\n      setMarkerOrigin(latlng);\r\n      setOrigem(address);\r\n    } else {\r\n      setMarkerDestination(latlng);\r\n      setDestino(address);\r\n    }\r\n    calcularDistancia(latlng, mode === 'origin' ? markerDestination : markerOrigin);\r\n  };\r\n\r\n  // Calcula a distância entre origem e destino\r\n  const calcularDistancia = (novaPosicao, outroPonto) => {\r\n    if (novaPosicao && outroPonto) {\r\n      const ponto1 = L.latLng(novaPosicao.lat, novaPosicao.lng);\r\n      const ponto2 = L.latLng(outroPonto.lat, outroPonto.lng);\r\n      const distanciaMetros = ponto1.distanceTo(ponto2); \r\n      const distanciaKm = (distanciaMetros / 1000).toFixed(2); \r\n      setDistancia(distanciaKm);\r\n    }\r\n  };\r\n\r\n  // ajuste da posição do marcador\r\n  const handleDragEnd = async (e, mode) => {\r\n    const marker = e.target;\r\n    const position = marker.getLatLng();\r\n    const address = await fetchAddressFromCoordinates(position.lat, position.lng);\r\n    if (mode === 'origin') {\r\n      setMarkerOrigin(position);\r\n      setOrigem(address);\r\n    } else {\r\n      setMarkerDestination(position);\r\n      setDestino(address);\r\n    }\r\n    calcularDistancia(position, mode === 'origin' ? markerDestination : markerOrigin);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    api.post('solicitacoes/', {\r\n      origem,    \r\n      destino,\r\n      distancia,   \r\n      data,\r\n      hora,\r\n      descricao,\r\n    })\r\n    .then(response => {\r\n      alert('Solicitação criada com sucesso!');\r\n      navigate('/solicitacoes');\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Erro ao criar solicitação:\", error.response?.data || error.message);\r\n      alert('Ocorreu um erro ao criar a solicitação.');\r\n    });\r\n  };\r\n  return (\r\n    <div className='corpo'>\r\n      <MapContainer className='mapcontainer' center={currentPosition} zoom={13} >\r\n        <TileLayer\r\n          attribution='&copy; OpenStreetMap contributors'\r\n          url='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\r\n        />\r\n        <MapSelector selectMode={selectMode} onLocationSelected={handleLocationSelected} />\r\n        {markerOrigin && (\r\n          <Marker\r\n            position={markerOrigin}\r\n            draggable={true}\r\n            eventHandlers={{\r\n              dragend: (e) => handleDragEnd(e, 'origin'),\r\n            }}\r\n          />\r\n        )}\r\n        {markerDestination && (\r\n          <Marker\r\n            position={markerDestination}\r\n            draggable={true}\r\n            eventHandlers={{\r\n              dragend: (e) => handleDragEnd(e, 'destination'),\r\n            }}\r\n          />\r\n        )}\r\n      </MapContainer>\r\n      <div className='boxdestination'>\r\n        <div className='boxorigem' >\r\n          <label><strong>Origem:</strong></label>\r\n          <input\r\n            onClick={() => setSelectMode('origin')}\r\n            type=\"text\"\r\n            value={origem}\r\n            readOnly\r\n            placeholder=\"Clique no mapa para selecionar a origem\"\r\n          />\r\n        </div>\r\n        <div className='boxdestino'>\r\n          <label><strong>Destino:</strong></label>\r\n          <input\r\n            onClick={() => setSelectMode('destination')}\r\n            type=\"text\"\r\n            value={destino}\r\n            readOnly\r\n            placeholder=\"Clique no mapa para selecionar o destino\"\r\n          />\r\n        </div>\r\n        {/* <div style={{ marginTop: '10px', textAlign: 'center' }}>\r\n          <button type=\"button\" onClick={() => setSelectMode('origin')} style={{ marginRight: '10px' }}>\r\n            Selecionar Origem\r\n          </button>\r\n          <button type=\"button\" onClick={() => setSelectMode('destination')}>\r\n            Selecionar Destino\r\n          </button>\r\n        </div> */}\r\n                {distancia && (\r\n          <div className=\"boxdistancia\">\r\n            <label><strong>Distância:</strong></label>\r\n            <input type=\"text\" value={`${distancia} km`} readOnly />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className='boxsolicitacao'>\r\n        <h2>Nova Solicitação de Serviço</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <label>\r\n            Data:\r\n            <input type=\"date\" value={data} onChange={e => setData(e.target.value)} required />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            Hora:\r\n            <input type=\"time\" value={hora} onChange={e => setHora(e.target.value)} required />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            Descrição:\r\n            <textarea value={descricao} onChange={e => setDescricao(e.target.value)} />\r\n          </label>\r\n          <br />\r\n          <button type=\"submit\">Criar Solicitação</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NovaSolicitacao;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}