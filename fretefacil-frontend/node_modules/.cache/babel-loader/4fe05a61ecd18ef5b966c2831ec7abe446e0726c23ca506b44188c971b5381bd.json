{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guinh\\\\OneDrive\\\\Documentos\\\\projetoFrete\\\\fretefacil-frontend\\\\src\\\\Solicitacoes.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import api from './Api';\n\n// function Solicitacoes() {\n//   const [solicitacoes, setSolicitacoes] = useState([]);\n\n//   useEffect(() => {\n//     api.get('solicitacoes/')\n//       .then(response => {\n//         setSolicitacoes(response.data);\n//       })\n//       .catch(error => {\n//         console.error(\"Erro ao buscar solicitações:\", error);\n//       });\n//   }, []);\n\n//   return (\n//     <div>\n//       <h2>Solicitações de Serviço</h2>\n//       <ul>\n//         {solicitacoes.map(s => (\n//           <li key={s.id}>\n//             {s.origem} para {s.destino} na data {s.data}\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default Solicitacoes;\n\nimport React, { useEffect, useState } from 'react';\nimport api from './Api';\nimport L from 'leaflet'; // Importando o Leaflet para o cálculo da distância\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Solicitacoes() {\n  _s();\n  const [solicitacoes, setSolicitacoes] = useState([]);\n  useEffect(() => {\n    api.get('solicitacoes/').then(response => {\n      setSolicitacoes(response.data);\n    }).catch(error => {\n      console.error(\"Erro ao buscar solicitações:\", error);\n    });\n  }, []);\n\n  // Função para calcular a distância entre dois pontos\n  // const calcularDistancia = (origem, destino) => {\n  //   const pontoOrigem = L.latLng(origem.latitude, origem.longitude);\n  //   const pontoDestino = L.latLng(destino.latitude, destino.longitude);\n  //   const distanciaMetros = pontoOrigem.distanceTo(pontoDestino); // Distância em metros\n  //   const distanciaKm = (distanciaMetros / 1000).toFixed(2); // Convertendo para quilômetros\n  //   return distanciaKm;\n  // };\n  function calcularDistancia(pontoOrigem, pontoDestino) {\n    if (pontoOrigem && pontoDestino && pontoOrigem.latitude !== 'number' && pontoOrigem.longitude !== 'number' && pontoDestino.latitude !== 'number' && pontoDestino.longitude !== 'number') {\n      const R = 6371e3; // Raio da Terra em metros\n      const φ1 = pontoOrigem.latitude * Math.PI / 180; // Latitude de pontoOrigem em radianos\n      const φ2 = pontoDestino.latitude * Math.PI / 180; // Latitude de pontoDestino em radianos\n      const Δφ = (pontoDestino.latitude - pontoOrigem.latitude) * Math.PI / 180; // Diferença de latitudes em radianos\n      const Δλ = (pontoDestino.longitude - pontoOrigem.longitude) * Math.PI / 180; // Diferença de longitudes em radianos\n\n      // Fórmula de Haversine\n      const a = Math.sin(Δφ / 2) * Math.sin(Δφ / 2) + Math.cos(φ1) * Math.cos(φ2) * Math.sin(Δλ / 2) * Math.sin(Δλ / 2);\n      const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\n      // Distância em metros\n      const distanciaMetros = R * c;\n      console.log('Distância calculada:', distanciaMetros);\n      return distanciaMetros;\n    } else {\n      console.error('Erro: pontos inválidos', pontoOrigem, pontoDestino);\n      return 0; // Ou outro valor de fallback\n    }\n  }\n\n  // Função para calcular o valor com base na distância\n  const calcularValor = distancia => {\n    return (distancia * 1.5).toFixed(2); // Multiplica a distância por 1,5\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Solicita\\xE7\\xF5es de Servi\\xE7o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: solicitacoes.map(s => {\n        console.log(s);\n        const distancia = calcularDistancia(s.origem, s.destino);\n        const valor = calcularValor(distancia);\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Solicita\\xE7\\xE3o de \", s.cliente]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Origem: \", s.origem.endereco, \" - Destino: \", s.destino.endereco]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Dist\\xE2ncia: \", distancia, \" km\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Valor: R$\", valor]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)]\n        }, s.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(Solicitacoes, \"mQoncaRz1KkVSoNjdfreS2KWmKM=\");\n_c = Solicitacoes;\nexport default Solicitacoes;\nvar _c;\n$RefreshReg$(_c, \"Solicitacoes\");","map":{"version":3,"names":["React","useEffect","useState","api","L","jsxDEV","_jsxDEV","Solicitacoes","_s","solicitacoes","setSolicitacoes","get","then","response","data","catch","error","console","calcularDistancia","pontoOrigem","pontoDestino","latitude","longitude","R","φ1","Math","PI","φ2","Δφ","Δλ","a","sin","cos","c","atan2","sqrt","distanciaMetros","log","calcularValor","distancia","toFixed","children","fileName","_jsxFileName","lineNumber","columnNumber","map","s","origem","destino","valor","cliente","endereco","id","_c","$RefreshReg$"],"sources":["C:/Users/guinh/OneDrive/Documentos/projetoFrete/fretefacil-frontend/src/Solicitacoes.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import api from './Api';\r\n\r\n// function Solicitacoes() {\r\n//   const [solicitacoes, setSolicitacoes] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     api.get('solicitacoes/')\r\n//       .then(response => {\r\n//         setSolicitacoes(response.data);\r\n//       })\r\n//       .catch(error => {\r\n//         console.error(\"Erro ao buscar solicitações:\", error);\r\n//       });\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Solicitações de Serviço</h2>\r\n//       <ul>\r\n//         {solicitacoes.map(s => (\r\n//           <li key={s.id}>\r\n//             {s.origem} para {s.destino} na data {s.data}\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Solicitacoes;\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport api from './Api';\r\nimport L from 'leaflet';  // Importando o Leaflet para o cálculo da distância\r\n\r\nfunction Solicitacoes() {\r\n  const [solicitacoes, setSolicitacoes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    api.get('solicitacoes/')\r\n      .then(response => {\r\n        setSolicitacoes(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Erro ao buscar solicitações:\", error);\r\n      });\r\n  }, []);\r\n\r\n  // Função para calcular a distância entre dois pontos\r\n  // const calcularDistancia = (origem, destino) => {\r\n  //   const pontoOrigem = L.latLng(origem.latitude, origem.longitude);\r\n  //   const pontoDestino = L.latLng(destino.latitude, destino.longitude);\r\n  //   const distanciaMetros = pontoOrigem.distanceTo(pontoDestino); // Distância em metros\r\n  //   const distanciaKm = (distanciaMetros / 1000).toFixed(2); // Convertendo para quilômetros\r\n  //   return distanciaKm;\r\n  // };\r\n  function calcularDistancia(pontoOrigem, pontoDestino) {\r\n    if (\r\n      pontoOrigem &&\r\n      pontoDestino &&\r\n      pontoOrigem.latitude !== 'number' &&\r\n      pontoOrigem.longitude !== 'number' &&\r\n      pontoDestino.latitude !== 'number' &&\r\n      pontoDestino.longitude !== 'number'\r\n    ) {\r\n      const R = 6371e3; // Raio da Terra em metros\r\n      const φ1 = pontoOrigem.latitude * Math.PI / 180; // Latitude de pontoOrigem em radianos\r\n      const φ2 = pontoDestino.latitude * Math.PI / 180; // Latitude de pontoDestino em radianos\r\n      const Δφ = (pontoDestino.latitude - pontoOrigem.latitude) * Math.PI / 180; // Diferença de latitudes em radianos\r\n      const Δλ = (pontoDestino.longitude - pontoOrigem.longitude) * Math.PI / 180; // Diferença de longitudes em radianos\r\n  \r\n      // Fórmula de Haversine\r\n      const a =\r\n        Math.sin(Δφ / 2) * Math.sin(Δφ / 2) +\r\n        Math.cos(φ1) * Math.cos(φ2) *\r\n        Math.sin(Δλ / 2) * Math.sin(Δλ / 2);\r\n      const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n  \r\n      // Distância em metros\r\n      const distanciaMetros = R * c;\r\n      console.log('Distância calculada:', distanciaMetros);\r\n      return distanciaMetros;\r\n    } else {\r\n      console.error('Erro: pontos inválidos', pontoOrigem, pontoDestino);\r\n      return 0; // Ou outro valor de fallback\r\n    }\r\n  }\r\n\r\n  // Função para calcular o valor com base na distância\r\n  const calcularValor = (distancia) => {\r\n    return (distancia * 1.5).toFixed(2);  // Multiplica a distância por 1,5\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Solicitações de Serviço</h2>\r\n      <ul>\r\n        {solicitacoes.map(s => {\r\n            console.log(s);\r\n          const distancia = calcularDistancia(s.origem, s.destino);\r\n          const valor = calcularValor(distancia);\r\n          return (\r\n            <li key={s.id}>\r\n              <h3>Solicitação de {s.cliente}</h3>\r\n              <p>Origem: {s.origem.endereco} - Destino: {s.destino.endereco}</p>\r\n              <p>Distância: {distancia} km</p>\r\n              <p>Valor: R${valor}</p>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Solicitacoes;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}